services:
  frontend:
    user: node

    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    environment:
      - GTM=${GTM}
      - GOOGLE_SITE_VERIFICATION=${GOOGLE_SITE_VERIFICATION}
      - NODE_ENV=production
    networks:
      - rishu-app_network

  web:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    restart: always
    ports:
      - 80:80
    environment:
      - SERVER_NAME=${HOST_NAME}
    networks:
      - rishu-app_network
    depends_on:
      - frontend
      - syllabus-backend
      - syllabus-frontend

  syllabus-backend:
    build:
      context: ./syllabus-backend
      dockerfile: Dockerfile
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - rishu-app_network
    depends_on:
      - syllabus-db

  syllabus-db:
    image: postgres:17.4-bullseye
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - syllabus-db:/var/lib/postgresql/data
    networks:
      - rishu-app_network

  syllabus-frontend:
    user: node
    build:
      context: ./syllabus-frontend
      dockerfile: Dockerfile
    restart: always
    environment:
      - NODE_ENV=production
    depends_on:
      - syllabus-backend
    networks:
      - rishu-app_network

  syllabus-scrape:
    build:
      context: ./syllabus-scrape
      dockerfile: Dockerfile
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      NODE_ENV: production
    networks:
      - rishu-app_network

networks:
  rishu-app_network:
    driver: bridge

volumes:
  syllabus-db:
